name: Create and publish a Docker image for add-inputs

on:
  push:
    paths:
      - apps/add-inputs/*
      - .github/workflows/build-add-inputs.yml

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: yoshikouki/add-inputs

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: apps/add-inputs

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # https://github.com/docker/login-action
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about)
    # to extract tags and labels that will be applied to the specified image.
    # The `id` "meta" allows the output of this step to be referenced in a subsequent step.
    # The `images` value provides the base name for the tags and labels.
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # This step uses the [docker/build-push-action](https://github.com/docker/build-push-action) action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
    # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
    # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./apps/add-inputs
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
